
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ABSTRACT AND ARROW ASSERT ASSIGN BOOLEAN BREAK BYTE CASE CATCH CHAR CLASS COMMA CONST CONTINUE DECREMENT DEFAULT DIVIDE DO DO DOT DOUBLE ELSE ENUM EQ EXTENDS FALSE FINAL FINALLY FLOAT FOR GE GT ID IF IMPLEMENTS IMPORT INCREMENT INSTANCEOF INT INTERFACE LBRACE LE LONG LPAREN LT MINUS MOD NATIVE NE NEW NOT NULL NUMBER OR PACKAGE PLUS PRIVATE PROTECTED PUBLIC RBRACE RETURN RPAREN SEMICOLON SHORT STATIC STRICTFP STRING SUPER SWITCH SYNCHRONIZED THIS THROW THROWS TIMES TRANSIENT TRUE TRY VOID VOLATILE WHILE WHILE\n    looping_construct : do_while_loop\n                     | empty\n    \n    do_while_loop : DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON\n    \n    statements : statement\n               | statements statement\n    \n    statement : ID ASSIGN expression SEMICOLON\n              | empty\n    \n    expression : term\n               | expression PLUS term\n               | expression MINUS term\n    \n    term : factor\n         | term TIMES factor\n         | term DIVIDE factor\n    \n    factor : ID\n           | NUMBER\n           | LPAREN expression RPAREN\n    empty :'
    
_lr_action_items = {'DO':([0,],[4,]),'$end':([0,1,2,3,34,],[-17,0,-1,-2,-3,]),'LBRACE':([4,],[5,]),'ID':([5,6,7,9,11,12,19,20,21,22,23,24,25,],[8,8,-4,-7,-5,14,14,14,-6,14,14,14,14,]),'RBRACE':([5,6,7,9,11,21,],[-17,10,-4,-7,-5,-6,]),'ASSIGN':([8,],[12,]),'WHILE':([10,],[13,]),'NUMBER':([12,19,20,22,23,24,25,],[18,18,18,18,18,18,18,]),'LPAREN':([12,13,19,20,22,23,24,25,],[19,20,19,19,19,19,19,19,]),'TIMES':([14,16,17,18,28,29,30,31,32,],[-14,24,-11,-15,24,24,-12,-13,-16,]),'DIVIDE':([14,16,17,18,28,29,30,31,32,],[-14,25,-11,-15,25,25,-12,-13,-16,]),'SEMICOLON':([14,15,16,17,18,28,29,30,31,32,33,],[-14,21,-8,-11,-15,-9,-10,-12,-13,-16,34,]),'PLUS':([14,15,16,17,18,26,27,28,29,30,31,32,],[-14,22,-8,-11,-15,22,22,-9,-10,-12,-13,-16,]),'MINUS':([14,15,16,17,18,26,27,28,29,30,31,32,],[-14,23,-8,-11,-15,23,23,-9,-10,-12,-13,-16,]),'RPAREN':([14,16,17,18,26,27,28,29,30,31,32,],[-14,-8,-11,-15,32,33,-9,-10,-12,-13,-16,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'looping_construct':([0,],[1,]),'do_while_loop':([0,],[2,]),'empty':([0,5,6,],[3,9,9,]),'statements':([5,],[6,]),'statement':([5,6,],[7,11,]),'expression':([12,19,20,],[15,26,27,]),'term':([12,19,20,22,23,],[16,16,16,28,29,]),'factor':([12,19,20,22,23,24,25,],[17,17,17,17,17,30,31,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> looping_construct","S'",1,None,None,None),
  ('looping_construct -> do_while_loop','looping_construct',1,'p_looping_construct','looping_constructs.py',137),
  ('looping_construct -> empty','looping_construct',1,'p_looping_construct','looping_constructs.py',138),
  ('do_while_loop -> DO LBRACE statements RBRACE WHILE LPAREN expression RPAREN SEMICOLON','do_while_loop',9,'p_do_while_loop','looping_constructs.py',144),
  ('statements -> statement','statements',1,'p_statements','looping_constructs.py',151),
  ('statements -> statements statement','statements',2,'p_statements','looping_constructs.py',152),
  ('statement -> ID ASSIGN expression SEMICOLON','statement',4,'p_statement','looping_constructs.py',159),
  ('statement -> empty','statement',1,'p_statement','looping_constructs.py',160),
  ('expression -> term','expression',1,'p_expression','looping_constructs.py',169),
  ('expression -> expression PLUS term','expression',3,'p_expression','looping_constructs.py',170),
  ('expression -> expression MINUS term','expression',3,'p_expression','looping_constructs.py',171),
  ('term -> factor','term',1,'p_term','looping_constructs.py',180),
  ('term -> term TIMES factor','term',3,'p_term','looping_constructs.py',181),
  ('term -> term DIVIDE factor','term',3,'p_term','looping_constructs.py',182),
  ('factor -> ID','factor',1,'p_factor','looping_constructs.py',191),
  ('factor -> NUMBER','factor',1,'p_factor','looping_constructs.py',192),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','looping_constructs.py',193),
  ('empty -> <empty>','empty',0,'p_empty','looping_constructs.py',209),
]
